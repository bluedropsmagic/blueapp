__d(function(g,r,i,a,m,e,d){var n=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.setNotificationUserId=e.sendTestNotification=e.requestNotificationPermission=e.oneSignalService=e.isNotificationSupported=e.initializeNotifications=e.getSubscriptionId=e.getNotificationPermission=e.checkOneSignalConfiguration=e.addNotificationTags=void 0;n(r(d[1]));const t="92702fef-b859-4458-8b6b-c87d32238ec6";const o=e.oneSignalService=new class OneSignalServiceImpl{isInitialized=!1;OneSignal=null;async initialize(){await this.initializeWeb()}async initializeWeb(){try{if(window.OneSignal)return this.OneSignal=window.OneSignal,this.isInitialized=!0,void console.log("OneSignal: Already loaded");const n=document.createElement("script");n.src="https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js",n.defer=!0;const o=new Promise((t,o)=>{n.onload=t,n.onerror=o,document.head.appendChild(n)}),s=new Promise((n,t)=>setTimeout(()=>t(new Error("OneSignal script load timeout")),15e3));await Promise.race([o,s]);const l=new Promise((n,t)=>{let o=0;const checkOneSignal=()=>{o++,window.OneSignal?n(window.OneSignal):o>=100?t(new Error("OneSignal not available after timeout")):setTimeout(checkOneSignal,100)};checkOneSignal()});await l,await window.OneSignal.init({appId:t,allowLocalhostAsSecureOrigin:!0,serviceWorkerPath:"/OneSignalSDKWorker.js",serviceWorkerUpdaterPath:"/OneSignalSDKWorker.js",notifyButton:{enable:!1},welcomeNotification:{disable:!0},autoRegister:!1,autoResubscribe:!0,persistNotification:!1,showCredit:!1,safari_web_id:void 0,promptOptions:{slidedown:{prompts:[{type:"push",autoPrompt:!1,text:{actionMessage:"We'd like to show you notifications for dose reminders and health tips.",acceptButton:"Allow",cancelButton:"No Thanks"},delay:{pageViews:999999,timeDelay:999999}}]}}}),this.OneSignal=window.OneSignal,this.isInitialized=!0,console.log("OneSignal Web SDK initialized successfully with App ID:",t),this.setupEventListeners()}catch(n){console.warn("OneSignal Web SDK initialization failed:",n?.message||n),this.isInitialized=!1}}setupEventListeners(){if(this.OneSignal)try{this.OneSignal.User.PushSubscription.addEventListener("change",n=>{console.log("OneSignal subscription changed:",n)}),this.OneSignal.Notifications.addEventListener("click",n=>{console.log("OneSignal notification clicked:",n)}),this.OneSignal.Notifications.addEventListener("permissionChange",n=>{console.log("OneSignal permission changed:",n)})}catch(n){console.warn("Error setting up OneSignal event listeners:",n)}}async initializeMobile(){try{console.log("OneSignal: Mobile initialization would happen here"),this.isInitialized=!0}catch(n){console.warn("OneSignal Mobile SDK initialization failed:",n?.message||n),this.isInitialized=!1}}async requestPermission(){if(!this.isInitialized)return console.warn("OneSignal not initialized"),!1;try{if(this.OneSignal){console.log("OneSignal: Showing permission prompt manually");const n=await this.OneSignal.Slidedown.promptPush();console.log("OneSignal slidedown result:",n);const t=await this.OneSignal.Notifications.getPermission();return console.log("OneSignal permission result:",t),t}return console.log("OneSignal: Mobile permission request would happen here"),!0}catch(n){if(console.warn("OneSignal permission request failed:",n?.message||n),"Notification"in window)try{return"granted"===await Notification.requestPermission()}catch(n){return console.warn("Fallback permission request failed:",n),!1}return!1}}async getSubscriptionId(){if(!this.isInitialized||!this.OneSignal)return null;try{return await this.OneSignal.User.PushSubscription.id||null}catch(n){return console.warn("Failed to get subscription ID:",n),null}}async sendTestNotification(){if(this.isInitialized)try{if(this.OneSignal){const n=await this.getSubscriptionId();if(console.log("OneSignal Subscription ID:",n),"Notification"in window&&"granted"===Notification.permission){const n=new Notification("BlueApp Test Notification ðŸ””",{body:"This is a test notification from BlueApp! Your notifications are working perfectly.",icon:"/favicon.ico",badge:"/favicon.ico",tag:"blueapp-test",requireInteraction:!1,data:{type:"test",timestamp:Date.now()}});setTimeout(()=>{n.close()},5e3),n.onclick=()=>{window.focus(),n.close()}}console.log("ðŸ“Š OneSignal Integration Info:"),console.log("App ID:",t),console.log("Subscription ID:",n),console.log("To send real notifications, use the OneSignal REST API with this subscription ID")}else console.log("OneSignal: Mobile test notification would be sent here")}catch(n){console.warn("OneSignal test notification failed:",n?.message||n)}else console.warn("OneSignal not initialized")}async sendNotification(n,o,s){console.log("To send notifications from backend, use OneSignal REST API:"),console.log("POST https://onesignal.com/api/v1/notifications"),console.log("Headers: Authorization: Basic YOUR_REST_API_KEY"),console.log("Body:",{app_id:t,headings:{en:n},contents:{en:o},data:s,included_segments:["All"]})}async setUserId(n){if(this.isInitialized)try{this.OneSignal?(await this.OneSignal.login(n),console.log("OneSignal user ID set:",n)):console.log("OneSignal: Mobile user ID would be set here")}catch(n){console.warn("OneSignal set user ID failed:",n?.message||n)}else console.warn("OneSignal not initialized")}async addTags(n){if(this.isInitialized)try{this.OneSignal?(await this.OneSignal.User.addTags(n),console.log("OneSignal tags added:",n)):console.log("OneSignal: Mobile tags would be added here")}catch(n){console.warn("OneSignal add tags failed:",n?.message||n)}else console.warn("OneSignal not initialized")}};e.initializeNotifications=async()=>{try{return await o.initialize(),o.isInitialized}catch(n){return console.warn("Failed to initialize notifications:",n?.message||n),!1}};e.requestNotificationPermission=async()=>{try{return await o.requestPermission()}catch(n){return console.warn("Failed to request notification permission:",n?.message||n),!1}};e.sendTestNotification=async()=>{try{await o.sendTestNotification()}catch(n){console.warn("Failed to send test notification:",n?.message||n)}};e.setNotificationUserId=async n=>{try{await o.setUserId(n)}catch(n){console.warn("Failed to set notification user ID:",n?.message||n)}};e.addNotificationTags=async n=>{try{await o.addTags(n)}catch(n){console.warn("Failed to add notification tags:",n?.message||n)}};e.getSubscriptionId=async()=>{try{return await o.getSubscriptionId()}catch(n){return console.warn("Failed to get subscription ID:",n?.message||n),null}};e.isNotificationSupported=()=>"Notification"in window&&"serviceWorker"in navigator;e.getNotificationPermission=()=>"Notification"in window?Notification.permission:"default";e.checkOneSignalConfiguration=()=>{const n=[];return"Notification"in window||n.push("Browser does not support notifications"),"serviceWorker"in navigator||n.push("Browser does not support service workers"),{isConfigured:0===n.length,issues:n}}},2512,[20,221]);